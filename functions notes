// function sayMyName() {
//     console.log("hello");
//     console.log("1");
//     console.log("2");
//     console.log("3");

// }
// sayMyName();

// function addTwoNumbers(num1, num2) {
//    return  num1 + num2;
    
// }
// let  result = addTwoNumbers(3, 8);
// console.log("result: ", result);

// function loginUserMsg(username = "ram") {
//     return `${username} just logged in`
// }
// console.log(loginUserMsg()); //undefined

// let x = myfunction(5,5);
// function myfunction(a,b) {
//     return a*b;
// }
// console.log(x);

// convert fahrenheit to celsius
// function tocelsius(f) {
//     return (5/9)*(f-32);
// }
// let result = tocelsius(prompt("enter the number,"));
// console.log("Result is", result);

//convert kelvin to celsius
// function tocelsius(kelvin) {
//     return kelvin-273;
// }
// let result = tocelsius(prompt("enter the kelvin "));
// console.log("result is", result );

//rest operator
// function calculateCartPrice(...num1){
//         return num1;
// }
// let x = calculateCartPrice(200, 300 , 400 ,500);
// console.log(x);
// const user = {
//     username : "navish",
//     age : 22
// }
// function handleMyObject(anyObject) {
//     console.log(`the username is ${anyObject.username} and the age is ${anyObject.age}`);
// }
// handleMyObject(user);

//arrow function and this
// const user = {
//     username : "navish",
//     price : 99,
//     welcomeMessage: function() {
//         console.log(`${this.username} , welcome to the website`); //this refers to current context
        
//     }
// }
// user.welcomeMessage()
// user.username = "sam"
// user.welcomeMessage()

// function one() {
//     let username = "navish";
//     console.log(this.username);
    
// }
// one()

// const chai = function() {
//     let username = "navish";
//      console.log(this.username);
// }
// chai();
//these are the ways of declaring the function.

//arrow function:-  () => {}   explicit arrow function
const one = (n1, n2) => {
    return n1 + n2;
}
console.log(one(3,4));

// const addTwo = (num1 , num2) => {   //arrow function basic
//     return num1*num2;
// }
 //console.log(addTwo(4,5));

// implicit return -- no need of return and {} brackets
const addTwo = (num1 , num2) => (num1*num2) 

 console.log(addTwo(4,5));

 //arrow function on objects

 const subTwo = (numb1, numb2) => ({name: "abc"})

 console.log(subTwo(1,2));
 

